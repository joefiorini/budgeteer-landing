---
- hosts: digitalocean
  vars:
    do_token: "{{ lookup('credstash', 'digital_ocean_api_key', region='us-east-1') }}"
  tasks:
    - name: ensure ssh key exists
      user: >
        name={{ ansible_user_id }}
        generate_ssh_key=yes
        ssh_key_file=.ssh/budgeteer-landing
    - name: ensure key exists in DO account
      digital_ocean: >
        state=present
        command=ssh
        name=budgeteer-landing-{{ ansible_nodename }}
        ssh_pub_key={{ lookup('file', '~/.ssh/budgeteer-landing.pub') }}
        api_token={{ do_token }}
      register: ssh_key
    - name: ensure droplet exists
      digital_ocean: >-
        state=present
        command=droplet
        name=budgeteer-landing-1
        unique_name=yes
        size_id=1gb
        region_id=NYC2
        image_id=centos-7-2-x64
        ssh_key_ids={{ ssh_key.ssh_key.id }}
        wait=yes
        api_token={{ do_token }}
      register: droplet
    - debug: msg="IP is {{ droplet.droplet.ip_address }}"
    - name: add droplet to inventory
      add_host: name={{ droplet.droplet.ip_address }} group=droplets

- hosts: droplets
  tasks:
    - name: after droplet create
      debug: msg="After droplet create"
    - name: create app user
      user:
        name=budgeteer-landing
        groups=wheel
        append=yes
    - name: add ssh key to user
      authorized_key: >-
        user=budgeteer-landing
        key="{{ lookup('file', '~/.ssh/budgeteer-landing.pub') }}"
        state=present
    - name: start firewalld
      service: >-
        name=firewalld
        enabled=yes
        state=started
    - name: allow firewalld services
      firewalld: >-
        service="{{ item }}"
        permanent=true
        state=enabled
        immediate=yes
      with_items:
        - http
        - https
        - ssh
    - name: Setup NTP
      command: timedatectl set-timezone UTC
    - yum: >-
        name=ntp
        state=present
    - service: >-
        name=ntpd
        enabled=yes
        state=started
    - name: Setup EPEL
      yum: >-
        name=epel-release
        state=present
    - name: Install nginx
      yum: >-
        name=nginx
        state=present
    - name: Start/enable nginx
      service: >-
        name=nginx
        enabled=yes
        state=started
    - name: Download nodesource script
      get_url: >-
        url=https://rpm.nodesource.com/setup_4.x
        dest=~/setup_node.sh
    - name: Setup nodesource repo
      command: bash ~/setup_node.sh
    - name: Install node
      yum: >-
        name=nodejs
        state=present
    - name: Install developer stack
      yum: >-
        name="@Development tools"
        state=present


